properties([
  parameters([
    [$class: 'GitParameterDefinition',
      name: 'BRANCH',
      type: 'PT_BRANCH',
      defaultValue: 'origin/master',
      description: 'Choose your GitHub branch',
      branchFilter: '.*',
      tagFilter: '*',
      sortMode: 'NONE',
      selectedValue: 'DEFAULT',
      quickFilterEnabled: true
    ]
  ])
])
pipeline {
  agent any

  tools {
    maven 'Maven-3.9.8'
  }

  environment {
    PROCESS_ANALYSER_GIT_URL = credentials('PROCESS_ANALYSER_GIT_URL')
    PATH = "${env.MAVEN_HOME}/bin:${env.JAVA_HOME}/bin:${env.PATH}"
    MVN_ARGS = '-Divy.engine.download.url=https://dev.axonivy.com/permalink/12.0.0/axonivy-engine.zip -Divy.engine.version=12.0.0 -Dproject.build.plugin.version=12.0.0 -Dtester.version=12.0.1'
  }

  parameters {
    string(name: 'engineSource', defaultValue: 'https://developer.axonivy.com/permalink/13.1.0/axonivy-engine.zip', description: 'Engine page url')
  }

  stages {
    stage('Set Display Name') {
      steps {
        script {
            sh 'mvn -v'
          def userId = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')[0]?.userId
          def fullName = "system"
          if (userId) {
            def user = jenkins.model.Jenkins.instance.getUser(userId)
            fullName = user?.getDisplayName() ?: userId
          }
          currentBuild.displayName = "Build #${env.BUILD_NUMBER} on branch ${BRANCH} - trigger by ${fullName}"
        }
      }
    }
    
    stage('Check Maven') {
      steps {
        sh 'mvn -version'
        sh 'which mvn'
      }
    }

    stage('Checkout Source') {
      steps {
        script {
          def gitBranch = params.BRANCH.replaceFirst(/^origin\//, '')
          git branch: gitBranch, url: env.PROCESS_ANALYSER_GIT_URL
        }
      }
    }
    
    stage('Build') {
      steps {
        sh 'mvn clean install ${MVN_ARGS}'
      }
    }

    stage('Deploy') {
      agent { label 'bpmn-statistic' }
      steps {
        script {
          def version = sh(
            script: "xmllint --xpath '/*[local-name()=\"project\"]/*[local-name()=\"version\"]/text()' pom.xml",
            returnStdout: true
          ).trim()

          def artifactDir = "artifact/process-analyser"
          def engineDeployDir = "/var/tools/ivy/12/deploy/PROCESS-ANALYSER"

          sh """
            install -m 666 ${artifactDir}/target/process-analyser-${version}.iar ${engineDeployDir}/process-analyser-${version}.iar
            install -m 666 ${artifactDir}-demo/target/process-analyser-demo-${version}.iar ${engineDeployDir}/process-analyser-demo-${version}.iar
          """
        }
      }
    }
    
    stage('Restart Engine') {
      agent { label 'bpmn-statistic' }
      steps {
        sh """
          cd /etc/docker-compose/engine/12
          docker compose restart
        """
      }
    }    
  }
}